kind: pipeline
type: docker
name: integration

steps:
  - name: code-analysis
    image: boulundeasv/dotnet-sdk-with-java
    environment:
      SONARSECRET:
        from_secret: SonarQubeSecret
    commands:
      - >
        dotnet sonarscanner begin
        /k:"easv-devops_Hazem-CDWeatherExample_AY7un1kuEVvRW2O60EyB"
        /d:sonar.host.url="http://sonar.setgo.dk:9000"
        /d:sonar.login="$SONARSECRET"
        /d:sonar.cs.vscoveragexml.reportsPaths="coverage.xml"
        /d:sonar.qualitygate.wait=true
      - dotnet build --no-incremental
      - dotnet-coverage collect "dotnet test" -f xml -o "coverage.xml"
      - dotnet sonarscanner end /d:sonar.login="$SONARSECRET"
hmac:

---

kind: pipeline
type: docker
name: deliver
depends_on:
  - integration

steps:
  - name: publish api
    image: plugins/docker
    settings:
      username:
        from_secret: DockerUsername
      password:
        from_secret: DockerPassword
      context: src
      dockerfile: src/WeatherAPI/Dockerfile
      repo: hazemalkhani/weather-api
      tags: staging

  - name: publish web
    image: plugins/docker
    settings:
      username:
        from_secret: DockerUsername
      password:
        from_secret: DockerPassword
      context: src
      dockerfile: src/WeatherFrontend/Dockerfile
      repo: hazemalkhani/weather-frontend
      tags:
        - staging

  - name: trigger update
    image: curlimages/curl
    commands:
      - curl --fail -X GET "http://62.169.21.165:8080/v1/update" -H "Authorization: Bearer mytoken"
      - sleep 10
    depends_on:
      - publish api
      - publish web

  - name: update database
    image: flyway/flyway
    commands:
      - flyway migrate -url="jdbc:mariadb://62.169.21.165:3306/forecasts" -user="myuser" -password="mypassword" -locations="filesystem:./db/sql"
    depends_on:
      - trigger update

  - name: performance tests
    image: grafana/k6
    commands:
      - k6 run test/performance/spike.js
    depends_on:
      - update database

  - name: end-to-end tests
    image: testcafe/testcafe
    commands:
      - testcafe chromium:headless test/e2e/count-forecasts.js
    depends_on:
      - update database
